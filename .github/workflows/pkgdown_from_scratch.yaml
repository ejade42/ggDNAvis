on:
  push:
    branches:
      - main
      - release/*
  workflow_dispatch:

name: pkgdown

permissions: read-all

jobs:
  pkgdown:
    runs-on: ubuntu-latest
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      
    steps:
      - name: Checkout code from trigger branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Fetch all release branches
        run: |
          git fetch --prune origin
          git branch -a

      - name: Get trigger branch name
        id: trigger
        run: echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
      
      - name: Collect release branches and boolean
        id: collect
        run: |
          git show origin/main:_pkgdown.yml > _pkgdown.yml
          git branch -a

          BUILD_ALL=$(yq -r '.site.build_all_versions // "false"' _pkgdown.yml)
          echo "build_all=$BUILD_ALL" >> $GITHUB_OUTPUT

          RELEASES=$(git for-each-ref --format="%(refname:short)" refs/remotes/origin/release/ \
            | sed "s|origin/release/||" \
            | sort -Vr \
            | tr "\n" " ")
          echo "releases=$RELEASES" >> $GITHUB_OUTPUT
          echo "Debug releases: ${RELEASES}"

          LATEST=$(echo "$RELEASES" | awk '{print $1}')
          echo "latest=$LATEST" >> $GITHUB_OUTPUT
          echo "Debug latest: ${LATEST}"
       
      - name: Setup R environment
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v2
        
      - name: Build and deploy branches
        run: |
          TRIGGER_BRANCH="${{ steps.trigger.outputs.branch }}"
          BUILD_ALL="${{ steps.collect.outputs.build_all }}"
          RELEASES="${{ steps.collect.outputs.releases }}"
          LATEST="${{ steps.collect.outputs.latest }}"
          
          echo "Trigger branch: ${TRIGGER_BRANCH}"
          echo "Build all bool: ${BUILD_ALL}"
          echo "Releases found: ${RELEASES}"
          echo "Latest release: ${LATEST}"
          
          
          echo; echo "Build step 1: Building latest release (${LATEST})"
          ## Checkout latest release branch but overwrite _pkgdown.yml
          git checkout -B "release-${LATEST}" "origin/release/${LATEST}"
          git show origin/main:_pkgdown.yml > _pkgdown.yml
          
          ## Build site in docs/
          Rscript -e "pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE, path = 'docs/')"
          
          
          #echo; echo "Build step 2: Building latest dev"
          ## Checkout main branch
          #git checkout -B "dev" "origin/main"
          
          ## Build site in docs/dev/
          #Rscript -e "pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE, path = 'docs/dev/')"
          
          
          
          echo; echo "Copy to deploy folder"
          mkdir deploy
          cp -r docs/* deploy/

      # Deploy to github pages
      - name: Deploy to GitHub Pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: deploy
          target-folder: ${{ steps.target.outputs.folder }}
          
         