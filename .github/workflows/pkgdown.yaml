on:
  push:
    branches:
      - main
  workflow_dispatch:

name: pkgdown

permissions: read-all

jobs:
  # 1️⃣ Discover which branches exist
  discover:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.collect.outputs.branches }}
      latest: ${{ steps.collect.outputs.latest }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: collect
        run: |
          RELEASES=$(git for-each-ref --format='%(refname:short)' refs/heads/release/ | sed 's|refs/heads/||' | sort -V)
          BRANCHES="main"
          for R in $RELEASES; do
            BRANCHES="$BRANCHES release/$R"
          done
          LATEST=$(echo "$RELEASES" | tail -n1)
          echo "branches=$BRANCHES" >> $GITHUB_OUTPUT
          echo "latest=release/$LATEST" >> $GITHUB_OUTPUT

  # 2️⃣ Build/deploy each branch in parallel
  build:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.discover.outputs.branches) }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 0

      # Get pkgdown config from main
      - name: Sync _pkgdown.yml from main
        run: git show origin/main:_pkgdown.yml > _pkgdown.yml

      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      # 3️⃣ Cache R packages for speed
      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.

      # Inject version menu (links to dev, releases, latest)
      - name: Inject version menu
        run: |
          ALL_RELEASES=$(git for-each-ref --format='%(refname:short)' refs/heads/release/ | sed 's|refs/heads/||' | sort -V)
          MENU=""
          for REL in $ALL_RELEASES; do
            MENU="$MENU\n        - text: \"v$REL\"\n          href: /ggDNAvis/v$REL/"
          done
          MENU="$MENU\n        - text: \"Latest release\"\n          href: /ggDNAvis/"
          MENU="$MENU\n        - text: \"Latest dev\"\n          href: /ggDNAvis/dev/"
          sed -i "s|#VERSIONS#|$MENU|" _pkgdown.yml

      - name: Build pkgdown
        run: Rscript -e "pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)"

      # Deploy to the right folder
      - name: Deploy
        run: |
          BR=${{ matrix.branch }}
          LATEST=${{ needs.discover.outputs.latest }}

          if [[ "$BR" == "main" ]]; then
            TARGET="dev"
          elif [[ "$BR" == release/* ]]; then
            VER="v${BR#release/}"
            TARGET="$VER"
          else
            TARGET="$BR"
          fi

          echo "Deploying $BR to /$TARGET"
          npx --yes jamesives/github-pages-deploy-action@v4 \
            --branch gh-pages \
            --folder docs \
            --target-folder "$TARGET" \
            --clean false

          # also publish root for latest release
          if [[ "$BR" == "$LATEST" ]]; then
            echo "Deploying $BR to / (root)"
            npx --yes jamesives/github-pages-deploy-action@v4 \
              --branch gh-pages \
              --folder docs \
              --target-folder "" \
              --clean false
          fi
          