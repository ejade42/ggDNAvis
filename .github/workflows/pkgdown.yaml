on:
  push:
    branches:
      - main
      - release/*
  workflow_dispatch:

name: pkgdown

permissions: read-all

jobs:
  pkgdown:
    runs-on: ubuntu-latest
    concurrency:
      group: pkgdown-${{ github.ref }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write

    steps:
      # Step 1: Checkout pkgdown config from main (sparse)
      - name: Checkout _pkgdown.yml from main
        uses: actions/checkout@v4
        with:
          ref: main
          sparse-checkout: |
            _pkgdown.yml
          sparse-checkout-cone-mode: false
          path: config

      # Step 1b: Checkout full repo from main for branch listing
      - name: Checkout full repo for branch listing
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0   # full history needed
          path: repo

      # Step 2: Checkout package code from triggered branch
      - name: Checkout package code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          path: package

      # Step 3: Copy pkgdown config from main into package
      - name: Use pkgdown config from main
        run: cp config/_pkgdown.yml package/

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: package
          extra-packages: any::pkgdown, local::.
          needs: website
          
      - name: Inject version menu into _pkgdown.yml
        run: |
          # list release branches from full repo
          RELEASES=$(cd repo && git for-each-ref --sort=-creatordate --format='%(refname:short)' refs/heads/release/ | sed 's|refs/heads/||')

          MENU=""
          for REL in $RELEASES; do
            MENU="$MENU\n        - text: \"$REL\"\n          href: /$REL/"
          done

          # replace placeholder in _pkgdown.yml in package/
          sed -i "s|#VERSIONS#|$MENU|" package/_pkgdown.yml

      - name: Build site
        working-directory: package
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      # Decide target folder
      - name: Choose target folder
        id: target
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "Branch: $BRANCH"

          if [[ "$BRANCH" == "main" ]]; then
            echo "folder=dev" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == release/* ]]; then
            VER="${BRANCH#release/}"
            echo "folder=$VER" >> $GITHUB_OUTPUT
          else
            echo "folder=$BRANCH" >> $GITHUB_OUTPUT
          fi

      # Deploy to version-specific folder
      - name: Deploy to GitHub Pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: package/docs
          target-folder: ${{ steps.target.outputs.folder }}

      # Deploy latest release branch to root
      - name: Deploy latest release to root
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          LATEST=$(cd repo && git for-each-ref --sort=-creatordate --format='%(refname:short)' refs/heads/release/ | sed 's|refs/heads/||' | head -n 1)
          CURRENT="${GITHUB_REF#refs/heads/}"
          echo "Latest: $LATEST, Current: $CURRENT"
          if [[ "$LATEST" == "$CURRENT" ]]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi
        id: latest-check

      - name: Deploy to root
        if: steps.latest-check.outputs.deploy == 'true'
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: package/docs
          target-folder: ""