on:
  push:
    branches:
      - main
      - release/*
  workflow_dispatch:

name: pkgdown

permissions: read-all

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.collect.outputs.branches }}
      latest: ${{ steps.collect.outputs.latest }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: collect
        run: |
          # Collect release branches (just the X.Y.Z part)
          RELEASES=$(git for-each-ref --format='%(refname:short)' refs/heads/release/ \
            | sed 's|refs/heads/release/||' \
            | sort -Vr)

          # Build JSON array with main + release branches
          JSON="[\"main\""
          for R in $RELEASES; do
            JSON="$JSON, \"release/$R\""
          done
          JSON="$JSON]"

          # Latest release = first item (highest version)
          LATEST=$(echo "$RELEASES" | head -n1)

          echo "branches=$JSON" >> $GITHUB_OUTPUT
          echo "latest=release/$LATEST" >> $GITHUB_OUTPUT

  build:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.discover.outputs.branches) }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 0

      # Always grab pkgdown config from main
      - name: Copy pkgdown config from main
        run: git show origin/main:_pkgdown.yml > _pkgdown.yml

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.

      - name: Inject version menu into _pkgdown.yml
        run: |
          # Collect releases sorted descending
          RELEASES=$(git for-each-ref --format='%(refname:short)' refs/heads/release/ \
            | sed 's|refs/heads/release/||' \
            | sort -Vr)

          MENU=""
          for REL in $RELEASES; do
            MENU="$MENU\n        - text: \"$REL\"\n          href: /$REL/"
          done

          # Replace placeholder
          sed -i "s|#VERSIONS#|$MENU|" _pkgdown.yml

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Choose target folder
        id: target
        run: |
          BRANCH="${{ matrix.branch }}"
          if [[ "$BRANCH" == "main" ]]; then
            echo "folder=dev" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == release/* ]]; then
            VER="${BRANCH#release/}"
            echo "folder=$VER" >> $GITHUB_OUTPUT
          else
            echo "folder=$BRANCH" >> $GITHUB_OUTPUT
          fi

      - name: Deploy versioned site
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: docs
          target-folder: ${{ steps.target.outputs.folder }}

      - name: Deploy latest release to root
        if: ${{ matrix.branch == needs.discover.outputs.latest }}
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: docs
          target-folder: ""
