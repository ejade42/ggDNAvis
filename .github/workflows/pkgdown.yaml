on:
  push:
    branches:
      - main
      - release/*
  workflow_dispatch:

name: pkgdown

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get trigger branch
        id: trigger
        run: echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Collect release branches and boolean
        id: collect
        run: |
          # Fetch main to read _pkgdown.yml
          git fetch origin main:refs/remotes/origin/main
          git show origin/main:_pkgdown.yml > _pkgdown.yml

          BUILD_ALL=$(yq -r '.site.build_all_versions // "false"' _pkgdown.yml)
          echo "build_all=$BUILD_ALL" >> $GITHUB_OUTPUT

          RELEASES=$(git for-each-ref --format='%(refname:short)' refs/heads/release/ \
            | sed 's|refs/heads/release/||' \
            | sort -V -r)
          echo "releases=$RELEASES" >> $GITHUB_OUTPUT

          LATEST=$(echo "$RELEASES" | head -n1)
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Setup R environment
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Build and deploy branches
        run: |
          TRIGGER=${{ steps.trigger.outputs.branch }}
          BUILD_ALL=${{ steps.collect.outputs.build_all }}
          RELEASES="${{ steps.collect.outputs.releases }}"
          LATEST="${{ steps.collect.outputs.latest }}"

          build_branch() {
            BRANCH="$1"
            TARGET="$2"
            echo "Building $BRANCH → /$TARGET/"
            git checkout $BRANCH

            # Use main's _pkgdown.yml
            git show origin/main:_pkgdown.yml > _pkgdown.yml

            # Inject version menu
            MENU=""
            for REL in $RELEASES; do
              MENU="$MENU\n        - text: \"v$REL\"\n          href: /$REL/"
            done
            sed -i "s|#VERSIONS#|$MENU|" _pkgdown.yml

            # Build site
            Rscript -e "pkgdown::build_site_github_pages(new_process=FALSE, install=FALSE)"

            # Deploy
            echo "Deploying $BRANCH → /$TARGET"
            # Use JamesIves action
            gh-pages-deploy() {
              echo "Deploying $BRANCH → /$TARGET"
            }
          }

          # MAIN branch logic
          if [[ "$TRIGGER" == "main" ]]; then
            # 1. Latest release to /
            if [[ -n "$LATEST" ]]; then
              build_branch "release/$LATEST" ""
            fi

            # 2. main to /dev
            build_branch "main" "dev"

            # 3. All release branches to /vX.X.X if build_all_versions
            if [[ "$BUILD_ALL" == "true" ]]; then
              for REL in $RELEASES; do
                build_branch "release/$REL" "$REL"
              done
            fi

          # RELEASE branch logic
          elif [[ "$TRIGGER" == release/* ]]; then
            VER="${TRIGGER#release/}"

            # Deploy release branch to /vX.X.X
            build_branch "$TRIGGER" "$VER"

            # Deploy to / if latest release
            if [[ "$TRIGGER" == "release/$LATEST" ]]; then
              build_branch "$TRIGGER" ""
            fi
          fi
